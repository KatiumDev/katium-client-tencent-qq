syntax = "proto3";

package katium.client.qq.message;

option java_package = "katium.client.qq.network.pb";
option java_outer_classname = "PbMessagePackets";

import "messages.proto";

message PullMessagesRequest {
  optional SyncFlag syncFlag = 1;
  optional bytes syncCookie = 2;
  optional int32 rambleFlag = 3;
  optional int32 latestRambleNumber = 4;
  optional int32 otherRambleNumber = 5;
  optional int32 onlineSyncFlag = 6;
  optional int32 contextFlag = 7;
  optional int32 whisperSessionId = 8;
  optional int32 requestType = 9;
  optional bytes publicAccountCookie = 10;
  optional bytes messageControlBuffer = 11;
  optional bytes serverBuffer = 12;
}

message PullMessagesResponse {
  int32 result = 1;
  optional string errorMessage = 2;
  optional bytes syncCookie = 3;
  SyncFlag syncFlag = 4;
  repeated UinPairMessage messages = 5;
  optional int64 uin = 6;
  int32 syncType = 7;
  optional bytes publicAccountCookie = 8;
  optional bool isPartialSync = 9;
  optional bytes controlBuffer = 10;
}

message OnlinePushRequest {
  Message message = 1;
  optional int32 serverIP = 2;
  optional bytes pushToken = 3;
  optional int32 pingFlag = 4;
  optional int32 generateFlag = 9;
}

enum SyncFlag {
  START = 0;
  CONTINUE = 1;
  STOP = 2;
}

message SyncCookie {
  optional int64 time1 = 1;
  optional int64 time = 2;
  optional int64 ran1 = 3;
  optional int64 ran2 = 4;
  optional int64 const1 = 5;
  optional int64 const2 = 11;
  optional int64 const3 = 12;
  optional int64 lastSyncTime = 13;
  optional int64 const4 = 14;
}

message UinPairMessage {
  int32 lastReadTime = 1;
  optional int64 peerUin = 2;
  optional int32 completed = 3;
  repeated Message messages = 4;
}

message SendMessageRequest {
  RoutingHeader header = 1;
  ContentHeader content = 2;
  MessageBody body = 3;
  int32 sequence = 4;
  int32 random = 5;
  optional bytes syncCookie = 6;
  optional AppShareInfo appShare = 7;
  optional int32 via = 8;
  optional int32 dataStatist = 9;
  //MultiMsgAssist? multiMsgAssist = 10;
  //PbInputNotifyInfo? inputNotifyInfo = 11;
  optional MessageControl control = 12;
  //ImReceipt.ReceiptReq? receiptReq = 13;
  optional int32 multiSendSequence = 14;
}

message SendMessageResponse {
  int32 result = 1;
  optional string error = 2;
}

// https://cs.github.com/mamoe/mirai/blob/dev/mirai-core/src/commonMain/kotlin/network/protocol/data/proto/MsgSvc.kt#L426
message RoutingHeader {
  optional ToFriend friend = 1;
  optional ToGroup group = 2;
}

message ToFriend {
  optional int64 toUin = 1;
}

message ToGroup {
  optional int64 groupCode = 1;
}

message AppShareInfo {
  int32 id = 1;
  bytes cookie = 2;
  optional PluginInfo resource = 3;
}

message PluginInfo {
  optional int32 resourceID = 1;
  optional string packageName = 2;
  optional int32 newVersion = 3;
  optional int32 resourceType = 4;
  optional int32 lanType = 5;
  optional int32 priority = 6;
  optional string resourceName = 7;
  optional string resourceDescription = 8;
  optional string resourceUrlBig = 9;
  optional string resourceUrlSmall = 10;
  optional string resourceConfig = 11;
}

message MessageControl {
  int32 flag = 1;
  optional ResvResvInfo resvResvInfo = 2;
}

message ResvResvInfo {
  int32 flag = 1;
  optional bytes reserved1 = 2;
  optional int64 reserved2 = 3;
  optional int64 reserved3 = 4;
  optional int32 createTime = 5;
  optional int32 pictureHeight = 6;
  optional int32 pictureWidth = 7;
  optional int32 resvFlag = 8;
}
